---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"input_context\": {\n      \"type\":
        \"string\",\n      \"description\": \"Serialized representation of all input
        fields\"\n    },\n    \"history\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"HistoryEntry\"\n          },\n          \"step\":
        {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action_input\":
        {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\":
        \"number\"\n              },\n              {\n                \"type\": \"object\",\n                \"propertyNames\":
        {\n                  \"type\": \"string\"\n                },\n                \"additionalProperties\":
        {\n                  \"type\": \"string\"\n                },\n                \"description\":
        \"A mapping where keys are strings and values are strings\"\n              },\n              {\n                \"type\":
        \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\":
        \"null\"\n              }\n            ],\n            \"description\": \"Union
        of multiple types\"\n          },\n          \"observation\": {\n            \"type\":
        [\n              \"string\",\n              \"null\"\n            ]\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"step\"\n        ],\n        \"description\":
        \"DSPy::HistoryEntry struct\"\n      },\n      \"description\": \"Previous
        thoughts and actions, including observations from tools.\"\n    },\n    \"available_tools\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":
        {\n          \"_type\": {\n            \"type\": \"string\",\n            \"const\":
        \"AvailableTool\"\n          },\n          \"name\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"schema\": {\n            \"type\": \"object\",\n            \"propertyNames\":
        {\n              \"type\": \"string\"\n            },\n            \"additionalProperties\":
        {\n              \"type\": \"string\"\n            },\n            \"description\":
        \"A mapping where keys are strings and values are strings\"\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"name\",\n          \"description\",\n          \"schema\"\n        ],\n        \"description\":
        \"DSPy::ReAct::AvailableTool struct\"\n      },\n      \"description\": \"Array
        of available tools with their JSON schemas.\"\n    }\n  },\n  \"required\":
        [\n    \"input_context\",\n    \"history\",\n    \"available_tools\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\":
        \"Reasoning about what to do next, considering the history and observations.\"\n    },\n    \"action\":
        {\n      \"type\": \"string\",\n      \"enum\": [\n        \"github_create_issue\",\n        \"github_create_pr\",\n        \"github_list_issues\",\n        \"github_list_prs\",\n        \"github_get_issue\",\n        \"github_get_pr\",\n        \"github_comment_on_issue\",\n        \"github_review_pr\",\n        \"github_api_request\",\n        \"finish\"\n      ],\n      \"description\":
        \"The action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\"\n    },\n    \"action_input\":
        {\n      \"oneOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\":
        \"object\",\n          \"propertyNames\": {\n            \"type\": \"string\"\n          },\n          \"additionalProperties\":
        {\n            \"type\": \"string\"\n          },\n          \"description\":
        \"A mapping where keys are strings and values are strings\"\n        }\n      ],\n      \"description\":
        \"Input for the chosen action. If action is a tool name, this MUST be a JSON
        object matching the tool''s schema. If action is \\\"finish\\\", this field
        MUST contain the final result based on processing the input data.\"\n    }\n  },\n  \"required\":
        [\n    \"thought\",\n    \"action\",\n    \"action_input\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Generate a thought about what to do next to process the given
        inputs."},{"role":"user","content":"## Input Values\n```json\n{\n  \"input_context\":
        \"{\\\"_type\\\":\\\"AnonymousStruct\\\",\\\"task\\\":\\\"List the open pull
        requests for the microsoft/vscode repository\\\",\\\"repository\\\":\\\"microsoft/vscode\\\"}\",\n  \"history\":
        [],\n  \"available_tools\": [\n    {\n      \"name\": \"github_create_issue\",\n      \"description\":
        \"Create a new GitHub issue\",\n      \"schema\": {\n        \"name\": \"github_create_issue\",\n        \"description\":
        \"Create a new GitHub issue\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter title\"\n            },\n            \"body\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        body\"\n            },\n            \"labels\": {\n              \"type\":
        \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\":
        \"Parameter labels (optional)\"\n            },\n            \"assignees\":
        {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\":
        \"string\"\n              },\n              \"description\": \"Parameter assignees
        (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"title\",\n            \"body\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_create_pr\",\n      \"description\": \"Create a new GitHub pull request\",\n      \"schema\":
        {\n        \"name\": \"github_create_pr\",\n        \"description\": \"Create
        a new GitHub pull request\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter title\"\n            },\n            \"body\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        body\"\n            },\n            \"base\": {\n              \"type\": \"string\",\n              \"description\":
        \"Parameter base\"\n            },\n            \"head\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter head\"\n            },\n            \"repo\":
        {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"title\",\n            \"body\",\n            \"base\",\n            \"head\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_list_issues\",\n      \"description\": \"List GitHub issues with
        optional filters\",\n      \"schema\": {\n        \"name\": \"github_list_issues\",\n        \"description\":
        \"List GitHub issues with optional filters\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"state\": {\n              \"type\":
        \"string\",\n              \"enum\": [\n                \"open\",\n                \"closed\",\n                \"all\"\n              ],\n              \"description\":
        \"Parameter state (optional)\"\n            },\n            \"labels\": {\n              \"type\":
        \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\":
        \"Parameter labels (optional)\"\n            },\n            \"assignee\":
        {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter assignee (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            },\n            \"limit\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter limit (optional)\"\n            }\n          },\n          \"required\":
        []\n        }\n      }\n    },\n    {\n      \"name\": \"github_list_prs\",\n      \"description\":
        \"List GitHub pull requests with optional filters\",\n      \"schema\": {\n        \"name\":
        \"github_list_prs\",\n        \"description\": \"List GitHub pull requests
        with optional filters\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"state\": {\n              \"type\": \"string\",\n              \"enum\":
        [\n                \"open\",\n                \"closed\",\n                \"merged\",\n                \"all\"\n              ],\n              \"description\":
        \"Parameter state (optional)\"\n            },\n            \"author\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter author (optional)\"\n            },\n            \"base\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter base (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            },\n            \"limit\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter limit (optional)\"\n            }\n          },\n          \"required\":
        []\n        }\n      }\n    },\n    {\n      \"name\": \"github_get_issue\",\n      \"description\":
        \"Get details of a specific GitHub issue\",\n      \"schema\": {\n        \"name\":
        \"github_get_issue\",\n        \"description\": \"Get details of a specific
        GitHub issue\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"issue_number\": {\n              \"type\": \"integer\",\n              \"description\":
        \"Parameter issue_number\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"issue_number\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_get_pr\",\n      \"description\": \"Get details of a specific GitHub
        pull request\",\n      \"schema\": {\n        \"name\": \"github_get_pr\",\n        \"description\":
        \"Get details of a specific GitHub pull request\",\n        \"parameters\":
        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"pr_number\":
        {\n              \"type\": \"integer\",\n              \"description\": \"Parameter
        pr_number\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"pr_number\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_comment_on_issue\",\n      \"description\": \"Add a comment to a
        GitHub issue\",\n      \"schema\": {\n        \"name\": \"github_comment_on_issue\",\n        \"description\":
        \"Add a comment to a GitHub issue\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"issue_number\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter issue_number\"\n            },\n            \"comment\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        comment\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"issue_number\",\n            \"comment\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_review_pr\",\n      \"description\": \"Add a review to a GitHub pull
        request\",\n      \"schema\": {\n        \"name\": \"github_review_pr\",\n        \"description\":
        \"Add a review to a GitHub pull request\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"pr_number\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter pr_number\"\n            },\n            \"review_type\":
        {\n              \"type\": \"string\",\n              \"enum\": [\n                \"approve\",\n                \"comment\",\n                \"request-changes\"\n              ],\n              \"description\":
        \"Parameter review_type\"\n            },\n            \"comment\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter comment (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"pr_number\",\n            \"review_type\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_api_request\",\n      \"description\": \"Make an arbitrary GitHub
        API request\",\n      \"schema\": {\n        \"name\": \"github_api_request\",\n        \"description\":
        \"Make an arbitrary GitHub API request\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"endpoint\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter endpoint\"\n            },\n            \"method\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        method (optional)\"\n            },\n            \"fields\": {\n              \"type\":
        \"object\",\n              \"propertyNames\": {\n                \"type\":
        \"string\"\n              },\n              \"additionalProperties\": {\n                \"type\":
        \"string\"\n              },\n              \"description\": \"Parameter fields
        (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"endpoint\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"thought\": \"Reasoning
        about what to do next, considering the history and observations.\",\n  \"action\":
        \"The action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\",\n  \"action_input\":
        \"example value\"\n}\n```\n\nRequired fields: thought, action, action_input\n\nEnsure
        your response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2.
        Includes all required fields\n3. Uses the correct data types for each field\n4.
        Is wrapped in ```json``` markdown code blocks\n"}],"temperature":1.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.22.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '17171'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Sep 2025 14:59:17 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '3469'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '3616'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9999'
      X-Ratelimit-Remaining-Tokens:
      - '196145'
      X-Ratelimit-Reset-Requests:
      - 8.64s
      X-Ratelimit-Reset-Tokens:
      - 1.156s
      X-Request-Id:
      - "<REQUEST_ID>"
      X-Openai-Proxy-Wasm:
      - v0.1
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 980139f7dd99cbb3-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-CGRRBbs44mbPtGx4FiL6imYVUWUnh",
          "object": "chat.completion",
          "created": 1758034753,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"To fulfill the request to list the open pull requests for the microsoft/vscode repository, I should use the 'github_list_prs' action with the appropriate parameters to filter by state 'open' and specify the repository.\",\n  \"action\": \"github_list_prs\",\n  \"action_input\": {\n    \"state\": \"open\",\n    \"repo\": \"microsoft/vscode\"\n  }\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 3167,
            "completion_tokens": 94,
            "total_tokens": 3261,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_51db84afab"
        }
  recorded_at: Tue, 16 Sep 2025 14:59:17 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"input_context\": {\n      \"type\":
        \"string\",\n      \"description\": \"Serialized representation of all input
        fields\"\n    },\n    \"history\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"HistoryEntry\"\n          },\n          \"step\":
        {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action_input\":
        {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\":
        \"number\"\n              },\n              {\n                \"type\": \"object\",\n                \"propertyNames\":
        {\n                  \"type\": \"string\"\n                },\n                \"additionalProperties\":
        {\n                  \"type\": \"string\"\n                },\n                \"description\":
        \"A mapping where keys are strings and values are strings\"\n              },\n              {\n                \"type\":
        \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\":
        \"null\"\n              }\n            ],\n            \"description\": \"Union
        of multiple types\"\n          },\n          \"observation\": {\n            \"type\":
        [\n              \"string\",\n              \"null\"\n            ]\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"step\"\n        ],\n        \"description\":
        \"DSPy::HistoryEntry struct\"\n      },\n      \"description\": \"Previous
        thoughts, actions, and observations.\"\n    },\n    \"observation\": {\n      \"type\":
        \"string\",\n      \"description\": \"The result from the last action\"\n    }\n  },\n  \"required\":
        [\n    \"input_context\",\n    \"history\",\n    \"observation\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"interpretation\": {\n      \"type\":
        \"string\",\n      \"description\": \"Interpretation of the observation\"\n    },\n    \"next_step\":
        {\n      \"type\": \"string\",\n      \"enum\": [\n        \"continue\",\n        \"finish\"\n      ],\n      \"description\":
        \"What to do next: ''#<DSPy::NextStep::Continue>'' or ''#<DSPy::NextStep::Finish>''\"\n    }\n  },\n  \"required\":
        [\n    \"interpretation\",\n    \"next_step\"\n  ]\n}\n```\n\nAll interactions
        will be structured in the following way, with the appropriate values filled
        in.\n## Input values\n```json\n{input_values}\n```\n## Output values\nRespond
        exclusively with the output schema fields in the json block below.\n```json\n{output_values}\n```\n\nIn
        adhering to this structure, your objective is: Process the observation from
        a tool and decide what to do next."},{"role":"user","content":"## Input Values\n```json\n{\n  \"input_context\":
        \"{\\\"_type\\\":\\\"AnonymousStruct\\\",\\\"task\\\":\\\"List the open pull
        requests for the microsoft/vscode repository\\\",\\\"repository\\\":\\\"microsoft/vscode\\\"}\",\n  \"history\":
        [\n    {\n      \"step\": 1,\n      \"thought\": \"To fulfill the request
        to list the open pull requests for the microsoft/vscode repository, I should
        use the ''github_list_prs'' action with the appropriate parameters to filter
        by state ''open'' and specify the repository.\",\n      \"action\": \"github_list_prs\",\n      \"action_input\":
        {\n        \"state\": \"open\",\n        \"repo\": \"microsoft/vscode\"\n      },\n      \"observation\":
        \"Found 20 pull request(s):\\n#267062: Revert \\\"Remove redundant activation
        & log extension service activation errors…\\\" (OPEN)\\n  tyler/shiny-tarsier
        → release/1.104\\n  URL: https://github.com/microsoft/vscode/pull/267062\\n\\n#267054:
        Adds padding for chat disclaimer welcome message when it has no chat history
        (OPEN)\\n  fix/chat-welcome-css → main\\n  URL: https://github.com/microsoft/vscode/pull/267054\\n\\n#267014:
        Improve copilot coding agent setup (OPEN)\\n  rebornix/minimum-newt → main\\n  URL:
        https://github.com/microsoft/vscode/pull/267014\\n\\n#267013: Revert \\\"Remove
        redundant activation & log extension service activation errors\\\" (OPEN)\\n  revert-262084-tyler/prospective-gayal
        → main\\n  URL: https://github.com/microsoft/vscode/pull/267013\\n\\n#267003:
        Double click in empty area should create a new chat (OPEN)\\n  benibenj/steep-planarian
        → main\\n  URL: https://github.com/microsoft/vscode/pull/267003\\n\\n#266991:
        turn chat history on by default (OPEN)\\n  justin/gorebyss → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266991\\n\\n#266979: Fix inappropriate
        OS toast notifications in chat confirmation widget (OPEN)\\n  copilot/fix-bb4464bd-6f7c-435b-b41c-a0a3cbcb912d
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266979\\n\\n#266977:
        Fix MCP server configuration overwrite bug in updateConfig method (OPEN)\\n  copilot/fix-176545c5-e398-4e34-85ca-dbaaa4d932b8
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266977\\n\\n#266974:
        Add double-click to create new chat session in Chat Sessions view (OPEN)\\n  copilot/fix-2e5ff4dd-b6d8-4c36-85e0-1ee854a62b47
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266974\\n\\n#266840:
        Adding VSCODE_COPILOT_TERMINAL environment variable (#265446). (OPEN)\\n  main
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266840\\n\\n#266720:
        Fix color detection in hsl saturation (OPEN)\\n  fix-180436-color-detection
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266720\\n\\n#266719:
        feat: add notification positioning setting (OPEN)\\n  feature/notification-positioning
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266719\\n\\n#266537:
        Fix and update the definition of fullwidth characters (OPEN)\\n  main → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266537\\n\\n#266488: Switch chat
        list from tree to WorkbenchList (OPEN)\\n  roblou/ashamed-bug → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266488\\n\\n#266485: fix: `lm.registerLanguageModelChatProvider`
        jsdoc formatting (OPEN)\\n  patch-2 → main\\n  URL: https://github.com/microsoft/vscode/pull/266485\\n\\n#266299:
        dispose of ref instead of object itself to avoid null objects. (OPEN)\\n  fix-invisible-code-blocks
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266299\\n\\n#266267:
        Joshspicer/policy export (OPEN)\\n  joshspicer/policyExport → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266267\\n\\n#266219: Show and hide
        viewcontainer based on visibility toggle (OPEN)\\n  benibenj/proposed-cricket
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266219\\n\\n#266174:
        Fix MCP view disposal leaks during rapid AI state toggling (OPEN)\\n  copilot/fix-262711
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266174\\n\\n#266166:
        Fix extension gear hover showing extension tooltip before action tooltip (OPEN)\\n  copilot/fix-263567
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266166\\n\"\n    }\n  ],\n  \"observation\":
        \"Found 20 pull request(s):\\n#267062: Revert \\\"Remove redundant activation
        & log extension service activation errors…\\\" (OPEN)\\n  tyler/shiny-tarsier
        → release/1.104\\n  URL: https://github.com/microsoft/vscode/pull/267062\\n\\n#267054:
        Adds padding for chat disclaimer welcome message when it has no chat history
        (OPEN)\\n  fix/chat-welcome-css → main\\n  URL: https://github.com/microsoft/vscode/pull/267054\\n\\n#267014:
        Improve copilot coding agent setup (OPEN)\\n  rebornix/minimum-newt → main\\n  URL:
        https://github.com/microsoft/vscode/pull/267014\\n\\n#267013: Revert \\\"Remove
        redundant activation & log extension service activation errors\\\" (OPEN)\\n  revert-262084-tyler/prospective-gayal
        → main\\n  URL: https://github.com/microsoft/vscode/pull/267013\\n\\n#267003:
        Double click in empty area should create a new chat (OPEN)\\n  benibenj/steep-planarian
        → main\\n  URL: https://github.com/microsoft/vscode/pull/267003\\n\\n#266991:
        turn chat history on by default (OPEN)\\n  justin/gorebyss → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266991\\n\\n#266979: Fix inappropriate
        OS toast notifications in chat confirmation widget (OPEN)\\n  copilot/fix-bb4464bd-6f7c-435b-b41c-a0a3cbcb912d
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266979\\n\\n#266977:
        Fix MCP server configuration overwrite bug in updateConfig method (OPEN)\\n  copilot/fix-176545c5-e398-4e34-85ca-dbaaa4d932b8
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266977\\n\\n#266974:
        Add double-click to create new chat session in Chat Sessions view (OPEN)\\n  copilot/fix-2e5ff4dd-b6d8-4c36-85e0-1ee854a62b47
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266974\\n\\n#266840:
        Adding VSCODE_COPILOT_TERMINAL environment variable (#265446). (OPEN)\\n  main
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266840\\n\\n#266720:
        Fix color detection in hsl saturation (OPEN)\\n  fix-180436-color-detection
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266720\\n\\n#266719:
        feat: add notification positioning setting (OPEN)\\n  feature/notification-positioning
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266719\\n\\n#266537:
        Fix and update the definition of fullwidth characters (OPEN)\\n  main → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266537\\n\\n#266488: Switch chat
        list from tree to WorkbenchList (OPEN)\\n  roblou/ashamed-bug → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266488\\n\\n#266485: fix: `lm.registerLanguageModelChatProvider`
        jsdoc formatting (OPEN)\\n  patch-2 → main\\n  URL: https://github.com/microsoft/vscode/pull/266485\\n\\n#266299:
        dispose of ref instead of object itself to avoid null objects. (OPEN)\\n  fix-invisible-code-blocks
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266299\\n\\n#266267:
        Joshspicer/policy export (OPEN)\\n  joshspicer/policyExport → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266267\\n\\n#266219: Show and hide
        viewcontainer based on visibility toggle (OPEN)\\n  benibenj/proposed-cricket
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266219\\n\\n#266174:
        Fix MCP view disposal leaks during rapid AI state toggling (OPEN)\\n  copilot/fix-262711
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266174\\n\\n#266166:
        Fix extension gear hover showing extension tooltip before action tooltip (OPEN)\\n  copilot/fix-263567
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266166\\n\"\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"interpretation\": \"Interpretation
        of the observation\",\n  \"next_step\": \"What to do next: ''#<DSPy::NextStep::Continue>''
        or ''#<DSPy::NextStep::Finish>''\"\n}\n```\n\nRequired fields: interpretation,
        next_step\n\nEnsure your response:\n1. Is valid JSON (properly quoted strings,
        no trailing commas)\n2. Includes all required fields\n3. Uses the correct
        data types for each field\n4. Is wrapped in ```json``` markdown code blocks\n"}],"temperature":1.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.22.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '11841'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Sep 2025 14:59:20 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '1816'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '2028'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9999'
      X-Ratelimit-Remaining-Tokens:
      - '197216'
      X-Ratelimit-Reset-Requests:
      - 8.64s
      X-Ratelimit-Reset-Tokens:
      - 835ms
      X-Request-Id:
      - "<REQUEST_ID>"
      X-Openai-Proxy-Wasm:
      - v0.1
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 98013a16d9e1cbb3-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-CGRRGRotx3MwyUKhnPX1nT8GEpOzR",
          "object": "chat.completion",
          "created": 1758034758,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"interpretation\": \"I successfully retrieved the list of 20 open pull requests for the microsoft/vscode repository with their relevant details, including titles, branch information, and URLs.\",\n  \"next_step\": \"continue\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 2992,
            "completion_tokens": 55,
            "total_tokens": 3047,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_51db84afab"
        }
  recorded_at: Tue, 16 Sep 2025 14:59:20 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"input_context\": {\n      \"type\":
        \"string\",\n      \"description\": \"Serialized representation of all input
        fields\"\n    },\n    \"history\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"HistoryEntry\"\n          },\n          \"step\":
        {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action_input\":
        {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\":
        \"number\"\n              },\n              {\n                \"type\": \"object\",\n                \"propertyNames\":
        {\n                  \"type\": \"string\"\n                },\n                \"additionalProperties\":
        {\n                  \"type\": \"string\"\n                },\n                \"description\":
        \"A mapping where keys are strings and values are strings\"\n              },\n              {\n                \"type\":
        \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\":
        \"null\"\n              }\n            ],\n            \"description\": \"Union
        of multiple types\"\n          },\n          \"observation\": {\n            \"type\":
        [\n              \"string\",\n              \"null\"\n            ]\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"step\"\n        ],\n        \"description\":
        \"DSPy::HistoryEntry struct\"\n      },\n      \"description\": \"Previous
        thoughts and actions, including observations from tools.\"\n    },\n    \"available_tools\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":
        {\n          \"_type\": {\n            \"type\": \"string\",\n            \"const\":
        \"AvailableTool\"\n          },\n          \"name\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"schema\": {\n            \"type\": \"object\",\n            \"propertyNames\":
        {\n              \"type\": \"string\"\n            },\n            \"additionalProperties\":
        {\n              \"type\": \"string\"\n            },\n            \"description\":
        \"A mapping where keys are strings and values are strings\"\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"name\",\n          \"description\",\n          \"schema\"\n        ],\n        \"description\":
        \"DSPy::ReAct::AvailableTool struct\"\n      },\n      \"description\": \"Array
        of available tools with their JSON schemas.\"\n    }\n  },\n  \"required\":
        [\n    \"input_context\",\n    \"history\",\n    \"available_tools\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\":
        \"Reasoning about what to do next, considering the history and observations.\"\n    },\n    \"action\":
        {\n      \"type\": \"string\",\n      \"enum\": [\n        \"github_create_issue\",\n        \"github_create_pr\",\n        \"github_list_issues\",\n        \"github_list_prs\",\n        \"github_get_issue\",\n        \"github_get_pr\",\n        \"github_comment_on_issue\",\n        \"github_review_pr\",\n        \"github_api_request\",\n        \"finish\"\n      ],\n      \"description\":
        \"The action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\"\n    },\n    \"action_input\":
        {\n      \"oneOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\":
        \"object\",\n          \"propertyNames\": {\n            \"type\": \"string\"\n          },\n          \"additionalProperties\":
        {\n            \"type\": \"string\"\n          },\n          \"description\":
        \"A mapping where keys are strings and values are strings\"\n        }\n      ],\n      \"description\":
        \"Input for the chosen action. If action is a tool name, this MUST be a JSON
        object matching the tool''s schema. If action is \\\"finish\\\", this field
        MUST contain the final result based on processing the input data.\"\n    }\n  },\n  \"required\":
        [\n    \"thought\",\n    \"action\",\n    \"action_input\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Generate a thought about what to do next to process the given
        inputs."},{"role":"user","content":"## Input Values\n```json\n{\n  \"input_context\":
        \"{\\\"_type\\\":\\\"AnonymousStruct\\\",\\\"task\\\":\\\"List the open pull
        requests for the microsoft/vscode repository\\\",\\\"repository\\\":\\\"microsoft/vscode\\\"}\",\n  \"history\":
        [\n    {\n      \"step\": 1,\n      \"thought\": \"To fulfill the request
        to list the open pull requests for the microsoft/vscode repository, I should
        use the ''github_list_prs'' action with the appropriate parameters to filter
        by state ''open'' and specify the repository.\",\n      \"action\": \"github_list_prs\",\n      \"action_input\":
        {\n        \"state\": \"open\",\n        \"repo\": \"microsoft/vscode\"\n      },\n      \"observation\":
        \"Found 20 pull request(s):\\n#267062: Revert \\\"Remove redundant activation
        & log extension service activation errors…\\\" (OPEN)\\n  tyler/shiny-tarsier
        → release/1.104\\n  URL: https://github.com/microsoft/vscode/pull/267062\\n\\n#267054:
        Adds padding for chat disclaimer welcome message when it has no chat history
        (OPEN)\\n  fix/chat-welcome-css → main\\n  URL: https://github.com/microsoft/vscode/pull/267054\\n\\n#267014:
        Improve copilot coding agent setup (OPEN)\\n  rebornix/minimum-newt → main\\n  URL:
        https://github.com/microsoft/vscode/pull/267014\\n\\n#267013: Revert \\\"Remove
        redundant activation & log extension service activation errors\\\" (OPEN)\\n  revert-262084-tyler/prospective-gayal
        → main\\n  URL: https://github.com/microsoft/vscode/pull/267013\\n\\n#267003:
        Double click in empty area should create a new chat (OPEN)\\n  benibenj/steep-planarian
        → main\\n  URL: https://github.com/microsoft/vscode/pull/267003\\n\\n#266991:
        turn chat history on by default (OPEN)\\n  justin/gorebyss → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266991\\n\\n#266979: Fix inappropriate
        OS toast notifications in chat confirmation widget (OPEN)\\n  copilot/fix-bb4464bd-6f7c-435b-b41c-a0a3cbcb912d
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266979\\n\\n#266977:
        Fix MCP server configuration overwrite bug in updateConfig method (OPEN)\\n  copilot/fix-176545c5-e398-4e34-85ca-dbaaa4d932b8
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266977\\n\\n#266974:
        Add double-click to create new chat session in Chat Sessions view (OPEN)\\n  copilot/fix-2e5ff4dd-b6d8-4c36-85e0-1ee854a62b47
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266974\\n\\n#266840:
        Adding VSCODE_COPILOT_TERMINAL environment variable (#265446). (OPEN)\\n  main
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266840\\n\\n#266720:
        Fix color detection in hsl saturation (OPEN)\\n  fix-180436-color-detection
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266720\\n\\n#266719:
        feat: add notification positioning setting (OPEN)\\n  feature/notification-positioning
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266719\\n\\n#266537:
        Fix and update the definition of fullwidth characters (OPEN)\\n  main → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266537\\n\\n#266488: Switch chat
        list from tree to WorkbenchList (OPEN)\\n  roblou/ashamed-bug → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266488\\n\\n#266485: fix: `lm.registerLanguageModelChatProvider`
        jsdoc formatting (OPEN)\\n  patch-2 → main\\n  URL: https://github.com/microsoft/vscode/pull/266485\\n\\n#266299:
        dispose of ref instead of object itself to avoid null objects. (OPEN)\\n  fix-invisible-code-blocks
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266299\\n\\n#266267:
        Joshspicer/policy export (OPEN)\\n  joshspicer/policyExport → main\\n  URL:
        https://github.com/microsoft/vscode/pull/266267\\n\\n#266219: Show and hide
        viewcontainer based on visibility toggle (OPEN)\\n  benibenj/proposed-cricket
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266219\\n\\n#266174:
        Fix MCP view disposal leaks during rapid AI state toggling (OPEN)\\n  copilot/fix-262711
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266174\\n\\n#266166:
        Fix extension gear hover showing extension tooltip before action tooltip (OPEN)\\n  copilot/fix-263567
        → main\\n  URL: https://github.com/microsoft/vscode/pull/266166\\n\"\n    }\n  ],\n  \"available_tools\":
        [\n    {\n      \"name\": \"github_create_issue\",\n      \"description\":
        \"Create a new GitHub issue\",\n      \"schema\": {\n        \"name\": \"github_create_issue\",\n        \"description\":
        \"Create a new GitHub issue\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter title\"\n            },\n            \"body\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        body\"\n            },\n            \"labels\": {\n              \"type\":
        \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\":
        \"Parameter labels (optional)\"\n            },\n            \"assignees\":
        {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\":
        \"string\"\n              },\n              \"description\": \"Parameter assignees
        (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"title\",\n            \"body\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_create_pr\",\n      \"description\": \"Create a new GitHub pull request\",\n      \"schema\":
        {\n        \"name\": \"github_create_pr\",\n        \"description\": \"Create
        a new GitHub pull request\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter title\"\n            },\n            \"body\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        body\"\n            },\n            \"base\": {\n              \"type\": \"string\",\n              \"description\":
        \"Parameter base\"\n            },\n            \"head\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter head\"\n            },\n            \"repo\":
        {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"title\",\n            \"body\",\n            \"base\",\n            \"head\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_list_issues\",\n      \"description\": \"List GitHub issues with
        optional filters\",\n      \"schema\": {\n        \"name\": \"github_list_issues\",\n        \"description\":
        \"List GitHub issues with optional filters\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"state\": {\n              \"type\":
        \"string\",\n              \"enum\": [\n                \"open\",\n                \"closed\",\n                \"all\"\n              ],\n              \"description\":
        \"Parameter state (optional)\"\n            },\n            \"labels\": {\n              \"type\":
        \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\":
        \"Parameter labels (optional)\"\n            },\n            \"assignee\":
        {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter assignee (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            },\n            \"limit\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter limit (optional)\"\n            }\n          },\n          \"required\":
        []\n        }\n      }\n    },\n    {\n      \"name\": \"github_list_prs\",\n      \"description\":
        \"List GitHub pull requests with optional filters\",\n      \"schema\": {\n        \"name\":
        \"github_list_prs\",\n        \"description\": \"List GitHub pull requests
        with optional filters\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"state\": {\n              \"type\": \"string\",\n              \"enum\":
        [\n                \"open\",\n                \"closed\",\n                \"merged\",\n                \"all\"\n              ],\n              \"description\":
        \"Parameter state (optional)\"\n            },\n            \"author\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter author (optional)\"\n            },\n            \"base\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter base (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            },\n            \"limit\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter limit (optional)\"\n            }\n          },\n          \"required\":
        []\n        }\n      }\n    },\n    {\n      \"name\": \"github_get_issue\",\n      \"description\":
        \"Get details of a specific GitHub issue\",\n      \"schema\": {\n        \"name\":
        \"github_get_issue\",\n        \"description\": \"Get details of a specific
        GitHub issue\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"issue_number\": {\n              \"type\": \"integer\",\n              \"description\":
        \"Parameter issue_number\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"issue_number\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_get_pr\",\n      \"description\": \"Get details of a specific GitHub
        pull request\",\n      \"schema\": {\n        \"name\": \"github_get_pr\",\n        \"description\":
        \"Get details of a specific GitHub pull request\",\n        \"parameters\":
        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"pr_number\":
        {\n              \"type\": \"integer\",\n              \"description\": \"Parameter
        pr_number\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"pr_number\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_comment_on_issue\",\n      \"description\": \"Add a comment to a
        GitHub issue\",\n      \"schema\": {\n        \"name\": \"github_comment_on_issue\",\n        \"description\":
        \"Add a comment to a GitHub issue\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"issue_number\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter issue_number\"\n            },\n            \"comment\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        comment\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"issue_number\",\n            \"comment\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_review_pr\",\n      \"description\": \"Add a review to a GitHub pull
        request\",\n      \"schema\": {\n        \"name\": \"github_review_pr\",\n        \"description\":
        \"Add a review to a GitHub pull request\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"pr_number\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter pr_number\"\n            },\n            \"review_type\":
        {\n              \"type\": \"string\",\n              \"enum\": [\n                \"approve\",\n                \"comment\",\n                \"request-changes\"\n              ],\n              \"description\":
        \"Parameter review_type\"\n            },\n            \"comment\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter comment (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"pr_number\",\n            \"review_type\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_api_request\",\n      \"description\": \"Make an arbitrary GitHub
        API request\",\n      \"schema\": {\n        \"name\": \"github_api_request\",\n        \"description\":
        \"Make an arbitrary GitHub API request\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"endpoint\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter endpoint\"\n            },\n            \"method\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        method (optional)\"\n            },\n            \"fields\": {\n              \"type\":
        \"object\",\n              \"propertyNames\": {\n                \"type\":
        \"string\"\n              },\n              \"additionalProperties\": {\n                \"type\":
        \"string\"\n              },\n              \"description\": \"Parameter fields
        (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"endpoint\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"thought\": \"Reasoning
        about what to do next, considering the history and observations.\",\n  \"action\":
        \"The action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\",\n  \"action_input\":
        \"example value\"\n}\n```\n\nRequired fields: thought, action, action_input\n\nEnsure
        your response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2.
        Includes all required fields\n3. Uses the correct data types for each field\n4.
        Is wrapped in ```json``` markdown code blocks\n"}],"temperature":1.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.22.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '21131'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Sep 2025 14:59:22 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '1514'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1531'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9997'
      X-Ratelimit-Remaining-Tokens:
      - '195186'
      X-Ratelimit-Reset-Requests:
      - 18.79s
      X-Ratelimit-Reset-Tokens:
      - 1.444s
      X-Request-Id:
      - "<REQUEST_ID>"
      X-Openai-Proxy-Wasm:
      - v0.1
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 98013a269d75cbb3-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-CGRRISgWXuVxuPSHGvAfO64uPylMi",
          "object": "chat.completion",
          "created": 1758034760,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"I have successfully listed the open pull requests for the microsoft/vscode repository. Next, I can either summarize this information or take an action such as creating a new issue based on this information.\",\n  \"action\": \"finish\",\n  \"action_input\": \"Listed 20 open pull requests in the microsoft/vscode repository.\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 4275,
            "completion_tokens": 79,
            "total_tokens": 4354,
            "prompt_tokens_details": {
              "cached_tokens": 1024,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_51db84afab"
        }
  recorded_at: Tue, 16 Sep 2025 14:59:22 GMT
recorded_with: VCR 6.3.1
