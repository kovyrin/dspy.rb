---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"task\": {\n      \"type\": \"string\",\n      \"description\":
        \"The task description requiring Ruby code solution\"\n    },\n    \"context\":
        {\n      \"type\": \"string\",\n      \"description\": \"Available variables
        and previous results from code execution history\"\n    },\n    \"history\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":
        {\n          \"step\": {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": \"string\"\n          },\n          \"ruby_code\":
        {\n            \"type\": \"string\"\n          },\n          \"execution_result\":
        {\n            \"type\": \"string\"\n          },\n          \"error_message\":
        {\n            \"type\": \"string\"\n          }\n        },\n        \"required\":
        [\n          \"step\"\n        ],\n        \"description\": \"DSPy::CodeActHistoryEntry
        struct\"\n      },\n      \"description\": \"Previous thoughts and code executions
        with their results. Use this to understand what has been tried and what variables
        are available.\"\n    }\n  },\n  \"required\": [\n    \"task\",\n    \"context\",\n    \"history\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\":
        \"Reasoning about the approach to solve the task with Ruby code\"\n    },\n    \"ruby_code\":
        {\n      \"type\": \"string\",\n      \"description\": \"Ruby code to execute.
        This should be valid Ruby code that can be evaluated safely. Avoid system
        calls, file operations, or other potentially dangerous operations.\"\n    },\n    \"explanation\":
        {\n      \"type\": \"string\",\n      \"description\": \"Brief explanation
        of what the code does and why this approach was chosen\"\n    }\n  },\n  \"required\":
        [\n    \"thought\",\n    \"ruby_code\",\n    \"explanation\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Generate Ruby code to solve the given task."},{"role":"user","content":"##
        Input Values\n```json\n{\n  \"task\": \"Calculate the sum of numbers from
        1 to 10\",\n  \"context\": null,\n  \"history\": []\n}\n```\n\nRespond with
        the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`."}],"temperature":0.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.9.0
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '2903'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 05 Jul 2025 08:18:30 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '1983'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1987'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9916'
      X-Ratelimit-Remaining-Tokens:
      - '199361'
      X-Ratelimit-Reset-Requests:
      - 12m4.172s
      X-Ratelimit-Reset-Tokens:
      - 191ms
      X-Request-Id:
      - "<REQUEST_ID>"
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 95a56e877e5ae640-EWR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BpsOKsaVC7AqfluRuN8cs0FCUCx4e",
          "object": "chat.completion",
          "created": 1751703508,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"To calculate the sum of numbers from 1 to 10, I can use a simple loop or the formula for the sum of an arithmetic series. Since the range is small, a loop is straightforward and easy to understand.\",\n  \"ruby_code\": \"sum = 0\\n(1..10).each do |number|\\n  sum += number\\nend\\nsum\",\n  \"explanation\": \"This code initializes a sum variable to 0, then iterates through each number from 1 to 10, adding each number to the sum. Finally, it returns the total sum.\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 610,
            "completion_tokens": 135,
            "total_tokens": 745,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_34a54ae93c"
        }
  recorded_at: Sat, 05 Jul 2025 08:18:30 GMT
recorded_with: VCR 6.3.1
