---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"topic\":{\"type\":\"string\",\"description\":\"The
        article topic\"},\"section_heading\":{\"type\":\"string\",\"description\":\"The
        section heading\"},\"section_subheadings\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"List
        of subheadings for this section\"}},\"required\":[\"topic\",\"section_heading\",\"section_subheadings\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"content\":{\"type\":\"string\",\"description\":\"Markdown-formatted
        section content\"},\"reasoning\":{\"type\":\"string\"}},\"required\":[\"content\",\"reasoning\"]}\n        ````\n      \n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n         {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Draft a top-level section of
        an article. Think step by step.\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"topic\":\"There Is a Liberal Answer
        to Elon Musk\",\"section_heading\":\"Introduction\",\"section_subheadings\":[]}\n        ```     \n        \n        Respond
        with the corresponding output schema fields wrapped in a ```json ``` block,
        \n         starting with the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 21 Jun 2025 19:29:23 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '1520'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1525'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9995'
      X-Ratelimit-Remaining-Tokens:
      - '199603'
      X-Ratelimit-Reset-Requests:
      - 41.97s
      X-Ratelimit-Reset-Tokens:
      - 119ms
      X-Request-Id:
      - req_c7fd605b5a84ddd7cd079ad4b15d1842
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=HuRFdBYCXtFDndIozUHhkTbrQPivic_MnmeWuSyxBpw-1750534163-1.0.1.1-kX.5Qk7SYIMuHHCFTjj7qWNp54AtHb7kxRD1dnpAWb2UEWNNyf0A3y4yPBN5RJ0Km0AD5VwOVa_UyiZCHWzY1UuMShM2O5P5YdYqoAKGcZI;
        path=/; expires=Sat, 21-Jun-25 19:59:23 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=7vOKizqTwoM7eRfdfhhlq4h8Mu0h.Sg6gln00hM1DWs-1750534163511-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 9535ea0eeb35b4fa-OSL
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BkyBtDDiQYW4jGrZL7u45FAI45aaz",
          "object": "chat.completion",
          "created": 1750534161,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"content\": \"# Introduction\\nIn the rapidly evolving landscape of technology and innovation, figures like Elon Musk often dominate the conversation. However, it's crucial to explore the liberal perspectives and solutions that can arise in response to his influence. This section will delve into the various liberal approaches that could provide answers to the challenges posed by Musk's ventures, including sustainability, equity, and social responsibility.\",\n  \"reasoning\": \"The introduction sets the stage for discussing a liberal response to Elon Musk by framing the conversation around the challenges he presents and highlighting the potential for innovative solutions from a liberal perspective. It establishes a clear context for the reader, inviting them to consider alternative viewpoints.\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 337,
            "completion_tokens": 143,
            "total_tokens": 480,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_34a54ae93c"
        }
  recorded_at: Sat, 21 Jun 2025 19:29:23 GMT
recorded_with: VCR 6.3.1
