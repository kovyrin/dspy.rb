---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"question\":{\"type\":\"string\",\"description\":\"The
        question to answer\"},\"history\":{\"type\":\"string\",\"description\":\"Previous
        thoughts and actions, including observations from tools. The agent MUST use
        information from the history to inform its actions and final answer. Each
        entry is a hash representing a step in the reasoning process.\"},\"available_tools\":{\"type\":\"string\",\"description\":\"List
        of available tools and their descriptions. The agent MUST choose an action
        from this list or use \\\"finish\\\".\"}},\"required\":[\"question\",\"history\",\"available_tools\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"thought\":{\"type\":\"string\",\"description\":\"Reasoning
        about what to do next, considering the history and observations.\"},\"action\":{\"type\":\"string\",\"description\":\"The
        action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\"},\"action_input\":{\"type\":\"string\",\"description\":\"Input
        for the chosen action. If action is \\\"finish\\\", this field MUST contain
        the final answer to the original question. This answer MUST be directly taken
        from the relevant Observation in the history if available. For example, if
        an observation showed \\\"Observation: 100.0\\\", and you are finishing, this
        field MUST be \\\"100.0\\\". Do not leave empty if finishing with an observed
        answer.\"}},\"required\":[\"thought\",\"action\",\"action_input\"]}\n        ````\n      \n      For
        example, based on the schemas above, a valid interaction would be:\n      ##
        Input values\n        ```json\n          {\"question\":\"example\",\"history\":\"example\",\"available_tools\":\"example\"}\n        ```\n      ##
        Output values\n        ```json\n          {\"thought\":\"example\",\"action\":\"example\",\"action_input\":\"example\"}\n        ```\n      \n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n         {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Generate a thought about what
        to do next to answer the question.\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"question\":\"What is 42 plus 58?\",\"history\":[],\"available_tools\":\"-
        get_todays_date: Returns the current date in a human-readable format\\n- add_numbers:
        Adds two numbers together\\n- calculator: Performs basic arithmetic operations\\n-
        get_random_number: Generates a random number within a specified range\"}\n        ```     \n        \n        Respond
        with the corresponding output schema fields wrapped in a ```json ``` block,
        \n         starting with the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 01 Jun 2025 17:26:28 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '1170'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1176'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9999'
      X-Ratelimit-Remaining-Tokens:
      - '199245'
      X-Ratelimit-Reset-Requests:
      - 8.64s
      X-Ratelimit-Reset-Tokens:
      - 226ms
      X-Request-Id:
      - req_4f80096f649ff66c6f36f741b99add92
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=MxfsojRLVck9_b6DaoBMvw6AJapixif6Qvj2uzXqRiA-1748798788-1.0.1.1-MMs187CfBFKx52YGkoLDLTkH7G2nGMF.v7XCsxLFuuqi71CIIFQN3UiqQ_wy7DeGKiN_RGCAyKMlciOtFl4s8O3RaIvHaCV5_yo1RUohO6U;
        path=/; expires=Sun, 01-Jun-25 17:56:28 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=v5PlBh.HSjcyz74Qb4Y_SL2q4vKB4cDS_CgNcnscLVo-1748798788324-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 94906a7fea1a0389-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BdgjzaOewQhkSkRR7BcQb4v42YlnL",
          "object": "chat.completion",
          "created": 1748798787,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"To answer the question about what 42 plus 58 is, I can use the 'add_numbers' tool which is specifically designed for adding two numbers together.\",\n  \"action\": \"add_numbers\",\n  \"action_input\": \"42, 58\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 622,
            "completion_tokens": 66,
            "total_tokens": 688,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_62a23a81ef"
        }
  recorded_at: Sun, 01 Jun 2025 17:26:28 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"question\":{\"type\":\"string\",\"description\":\"The
        question to answer\"},\"history\":{\"type\":\"string\",\"description\":\"Previous
        thoughts and actions, including observations from tools. The agent MUST use
        information from the history to inform its actions and final answer. Each
        entry is a hash representing a step in the reasoning process.\"},\"available_tools\":{\"type\":\"string\",\"description\":\"List
        of available tools and their descriptions. The agent MUST choose an action
        from this list or use \\\"finish\\\".\"}},\"required\":[\"question\",\"history\",\"available_tools\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"thought\":{\"type\":\"string\",\"description\":\"Reasoning
        about what to do next, considering the history and observations.\"},\"action\":{\"type\":\"string\",\"description\":\"The
        action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\"},\"action_input\":{\"type\":\"string\",\"description\":\"Input
        for the chosen action. If action is \\\"finish\\\", this field MUST contain
        the final answer to the original question. This answer MUST be directly taken
        from the relevant Observation in the history if available. For example, if
        an observation showed \\\"Observation: 100.0\\\", and you are finishing, this
        field MUST be \\\"100.0\\\". Do not leave empty if finishing with an observed
        answer.\"}},\"required\":[\"thought\",\"action\",\"action_input\"]}\n        ````\n      \n      For
        example, based on the schemas above, a valid interaction would be:\n      ##
        Input values\n        ```json\n          {\"question\":\"example\",\"history\":\"example\",\"available_tools\":\"example\"}\n        ```\n      ##
        Output values\n        ```json\n          {\"thought\":\"example\",\"action\":\"example\",\"action_input\":\"example\"}\n        ```\n      \n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n         {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Generate a thought about what
        to do next to answer the question.\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"question\":\"What is 42 plus 58?\",\"history\":[\"#<DSPy::HistoryEntry:0x000000011fd54948>\"],\"available_tools\":\"-
        get_todays_date: Returns the current date in a human-readable format\\n- add_numbers:
        Adds two numbers together\\n- calculator: Performs basic arithmetic operations\\n-
        get_random_number: Generates a random number within a specified range\"}\n        ```     \n        \n        Respond
        with the corresponding output schema fields wrapped in a ```json ``` block,
        \n         starting with the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 01 Jun 2025 17:26:30 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '1611'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1615'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9998'
      X-Ratelimit-Remaining-Tokens:
      - '199235'
      X-Ratelimit-Reset-Requests:
      - 15.849s
      X-Ratelimit-Reset-Tokens:
      - 229ms
      X-Request-Id:
      - req_cdc51bc22eeb54de41b9489cd2fe01ba
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=lSY3KfXjAjJW7PKbICYy3_4y40xq69jYiMXO7bt3TaU-1748798790-1.0.1.1-wr9ILezUnvV8kFBLV70qqUgqDp79iV6Mzv_J2sK9_iVu2YXrSSvLslJU.4bscnDjDp15UISFJLpS74YKKuDs2iM.s2OtrHclOE7DnMuQ8jQ;
        path=/; expires=Sun, 01-Jun-25 17:56:30 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=TJdH4fkUIx89feP6xZrzwHvOeRNFdtkeCcr3oagj6Fo-1748798790193-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 94906a8bee7a1a84-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-Bdgk0JPCJs6vFGfDvGE3oSij53aGt",
          "object": "chat.completion",
          "created": 1748798788,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"To answer the question about what 42 plus 58 is, I should use a tool that can perform addition. The available tools include 'add_numbers' and 'calculator', both of which can be used for this purpose. I'll choose 'add_numbers' to directly add the two numbers together.\",\n  \"action\": \"add_numbers\",\n  \"action_input\": \"42, 58\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 640,
            "completion_tokens": 93,
            "total_tokens": 733,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_62a23a81ef"
        }
  recorded_at: Sun, 01 Jun 2025 17:26:30 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"question\":{\"type\":\"string\",\"description\":\"The
        question to answer\"},\"history\":{\"type\":\"string\",\"description\":\"Previous
        thoughts and actions, including observations from tools. The agent MUST use
        information from the history to inform its actions and final answer. Each
        entry is a hash representing a step in the reasoning process.\"},\"available_tools\":{\"type\":\"string\",\"description\":\"List
        of available tools and their descriptions. The agent MUST choose an action
        from this list or use \\\"finish\\\".\"}},\"required\":[\"question\",\"history\",\"available_tools\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"thought\":{\"type\":\"string\",\"description\":\"Reasoning
        about what to do next, considering the history and observations.\"},\"action\":{\"type\":\"string\",\"description\":\"The
        action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\"},\"action_input\":{\"type\":\"string\",\"description\":\"Input
        for the chosen action. If action is \\\"finish\\\", this field MUST contain
        the final answer to the original question. This answer MUST be directly taken
        from the relevant Observation in the history if available. For example, if
        an observation showed \\\"Observation: 100.0\\\", and you are finishing, this
        field MUST be \\\"100.0\\\". Do not leave empty if finishing with an observed
        answer.\"}},\"required\":[\"thought\",\"action\",\"action_input\"]}\n        ````\n      \n      For
        example, based on the schemas above, a valid interaction would be:\n      ##
        Input values\n        ```json\n          {\"question\":\"example\",\"history\":\"example\",\"available_tools\":\"example\"}\n        ```\n      ##
        Output values\n        ```json\n          {\"thought\":\"example\",\"action\":\"example\",\"action_input\":\"example\"}\n        ```\n      \n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n         {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Generate a thought about what
        to do next to answer the question.\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"question\":\"What is 42 plus 58?\",\"history\":[\"#<DSPy::HistoryEntry:0x000000011fd54948>\",\"#<DSPy::HistoryEntry:0x000000011f792a50>\"],\"available_tools\":\"-
        get_todays_date: Returns the current date in a human-readable format\\n- add_numbers:
        Adds two numbers together\\n- calculator: Performs basic arithmetic operations\\n-
        get_random_number: Generates a random number within a specified range\"}\n        ```     \n        \n        Respond
        with the corresponding output schema fields wrapped in a ```json ``` block,
        \n         starting with the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 01 Jun 2025 17:26:32 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '1289'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1303'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9997'
      X-Ratelimit-Remaining-Tokens:
      - '199223'
      X-Ratelimit-Reset-Requests:
      - 22.273s
      X-Ratelimit-Reset-Tokens:
      - 232ms
      X-Request-Id:
      - req_19cf88755aefee9758c3c08f75ec0a4c
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=5hwuCBT.EgyDaihE1V5gZ6BPpuAuTsKsjMhEDW3PWqs-1748798792-1.0.1.1-jCmHbHbUjAFv3c4oihWY5qnfmg4FJ7.m4K6yK5tnGs_bATSWSEltUcDzf8o29ZWItEClxYUAd89DNtHs7Sh1NZVqcbU5Wg_W0RbBGGF.ryY;
        path=/; expires=Sun, 01-Jun-25 17:56:32 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=WmsQICfJMr.3gSJHl4.fPzPjYYfcNcAH1AtDip4EjE8-1748798792094-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 94906a99cdad0423-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-Bdgk29A0meMlK6V1MtbTzDONrimKR",
          "object": "chat.completion",
          "created": 1748798790,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"To answer the question about what 42 plus 58 is, I should use one of the available tools for performing arithmetic operations. The 'add_numbers' tool seems most appropriate for this task.\",\n  \"action\": \"add_numbers\",\n  \"action_input\": \"42, 58\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 658,
            "completion_tokens": 73,
            "total_tokens": 731,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_62a23a81ef"
        }
  recorded_at: Sun, 01 Jun 2025 17:26:32 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"question\":{\"type\":\"string\",\"description\":\"The
        question to answer\"},\"history\":{\"type\":\"string\",\"description\":\"Previous
        thoughts and actions, including observations from tools. The agent MUST use
        information from the history to inform its actions and final answer. Each
        entry is a hash representing a step in the reasoning process.\"},\"available_tools\":{\"type\":\"string\",\"description\":\"List
        of available tools and their descriptions. The agent MUST choose an action
        from this list or use \\\"finish\\\".\"}},\"required\":[\"question\",\"history\",\"available_tools\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"thought\":{\"type\":\"string\",\"description\":\"Reasoning
        about what to do next, considering the history and observations.\"},\"action\":{\"type\":\"string\",\"description\":\"The
        action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\"},\"action_input\":{\"type\":\"string\",\"description\":\"Input
        for the chosen action. If action is \\\"finish\\\", this field MUST contain
        the final answer to the original question. This answer MUST be directly taken
        from the relevant Observation in the history if available. For example, if
        an observation showed \\\"Observation: 100.0\\\", and you are finishing, this
        field MUST be \\\"100.0\\\". Do not leave empty if finishing with an observed
        answer.\"}},\"required\":[\"thought\",\"action\",\"action_input\"]}\n        ````\n      \n      For
        example, based on the schemas above, a valid interaction would be:\n      ##
        Input values\n        ```json\n          {\"question\":\"example\",\"history\":\"example\",\"available_tools\":\"example\"}\n        ```\n      ##
        Output values\n        ```json\n          {\"thought\":\"example\",\"action\":\"example\",\"action_input\":\"example\"}\n        ```\n      \n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n         {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Generate a thought about what
        to do next to answer the question.\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"question\":\"What is 42 plus 58?\",\"history\":[\"#<DSPy::HistoryEntry:0x000000011fd54948>\",\"#<DSPy::HistoryEntry:0x000000011f792a50>\",\"#<DSPy::HistoryEntry:0x000000011f1cd8e0>\"],\"available_tools\":\"-
        get_todays_date: Returns the current date in a human-readable format\\n- add_numbers:
        Adds two numbers together\\n- calculator: Performs basic arithmetic operations\\n-
        get_random_number: Generates a random number within a specified range\"}\n        ```     \n        \n        Respond
        with the corresponding output schema fields wrapped in a ```json ``` block,
        \n         starting with the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 01 Jun 2025 17:26:34 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '1427'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1432'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9996'
      X-Ratelimit-Remaining-Tokens:
      - '199212'
      X-Ratelimit-Reset-Requests:
      - 28.815s
      X-Ratelimit-Reset-Tokens:
      - 236ms
      X-Request-Id:
      - req_e25509d2b48d3838077188f46c141150
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=Z1wrhYB5pWEs2hD1IdsuuVIjMXxjmGa38eVKZ0DLY00-1748798794-1.0.1.1-NGorHm_zqO4rT2CNrFBtoIU3hwifE2DIJtU6IAwy0YWXPfcdo5WVD07u0DpE7w3ebvrF59f6XmZaqxSOsDYU29yFGwwUZMYeIUSBuZcLLAY;
        path=/; expires=Sun, 01-Jun-25 17:56:34 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=DqT2JMO.KZTzt61C4ez1J.htm5oP38.q9wcYuQMETk8-1748798794329-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 94906aa54a1dcfee-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-Bdgk4mNUo4nhN1xqpC0GA2zFMzNLQ",
          "object": "chat.completion",
          "created": 1748798792,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"To answer the question about the sum of 42 and 58, I should use a tool that adds numbers together. The available tool 'add_numbers' is appropriate for this task.\",\n  \"action\": \"add_numbers\",\n  \"action_input\": \"42, 58\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 678,
            "completion_tokens": 71,
            "total_tokens": 749,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_62a23a81ef"
        }
  recorded_at: Sun, 01 Jun 2025 17:26:34 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"question\":{\"type\":\"string\",\"description\":\"The
        question to answer\"},\"history\":{\"type\":\"string\",\"description\":\"Previous
        thoughts and actions, including observations from tools. The agent MUST use
        information from the history to inform its actions and final answer. Each
        entry is a hash representing a step in the reasoning process.\"},\"available_tools\":{\"type\":\"string\",\"description\":\"List
        of available tools and their descriptions. The agent MUST choose an action
        from this list or use \\\"finish\\\".\"}},\"required\":[\"question\",\"history\",\"available_tools\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"thought\":{\"type\":\"string\",\"description\":\"Reasoning
        about what to do next, considering the history and observations.\"},\"action\":{\"type\":\"string\",\"description\":\"The
        action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\"},\"action_input\":{\"type\":\"string\",\"description\":\"Input
        for the chosen action. If action is \\\"finish\\\", this field MUST contain
        the final answer to the original question. This answer MUST be directly taken
        from the relevant Observation in the history if available. For example, if
        an observation showed \\\"Observation: 100.0\\\", and you are finishing, this
        field MUST be \\\"100.0\\\". Do not leave empty if finishing with an observed
        answer.\"}},\"required\":[\"thought\",\"action\",\"action_input\"]}\n        ````\n      \n      For
        example, based on the schemas above, a valid interaction would be:\n      ##
        Input values\n        ```json\n          {\"question\":\"example\",\"history\":\"example\",\"available_tools\":\"example\"}\n        ```\n      ##
        Output values\n        ```json\n          {\"thought\":\"example\",\"action\":\"example\",\"action_input\":\"example\"}\n        ```\n      \n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n         {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Generate a thought about what
        to do next to answer the question.\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"question\":\"What is 42 plus 58?\",\"history\":[\"#<DSPy::HistoryEntry:0x000000011fd54948>\",\"#<DSPy::HistoryEntry:0x000000011f792a50>\",\"#<DSPy::HistoryEntry:0x000000011f1cd8e0>\",\"#<DSPy::HistoryEntry:0x000000011b18fc38>\"],\"available_tools\":\"-
        get_todays_date: Returns the current date in a human-readable format\\n- add_numbers:
        Adds two numbers together\\n- calculator: Performs basic arithmetic operations\\n-
        get_random_number: Generates a random number within a specified range\"}\n        ```     \n        \n        Respond
        with the corresponding output schema fields wrapped in a ```json ``` block,
        \n         starting with the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 01 Jun 2025 17:26:36 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '1583'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1585'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9995'
      X-Ratelimit-Remaining-Tokens:
      - '199201'
      X-Ratelimit-Reset-Requests:
      - 35.756s
      X-Ratelimit-Reset-Tokens:
      - 239ms
      X-Request-Id:
      - req_94046578ccc62150b024c2a655d131c2
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=cMbi.5EMudGfw70K61XvBfDJy5zUTFtrGFEdGvQiVS4-1748798796-1.0.1.1-lC1C9U.w.hncK63hwauIxNkhKqj21sXAyyvYxGakyG2opUCmgVAFaQ4QfasXlp6U15MURmxSTsS0hm1CvKS3iDyMQwZaJJqjmKr.T.Bs2xI;
        path=/; expires=Sun, 01-Jun-25 17:56:36 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=ZHeL1Xa3GIZRoWRCYVQjn1rS0a_hGcq6dx7H8h.Or1M-1748798796177-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 94906ab17fbf0141-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-Bdgk6MDDdcdujiOHApS2yNxnRYXAW",
          "object": "chat.completion",
          "created": 1748798794,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"To answer the question about the sum of 42 and 58, I should use a tool that can perform arithmetic operations. The 'add_numbers' tool is specifically designed for this purpose, or I could use the 'calculator' tool as well. Both options will help me find the answer efficiently.\",\n  \"action\": \"add_numbers\",\n  \"action_input\": \"42, 58\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 696,
            "completion_tokens": 94,
            "total_tokens": 790,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_62a23a81ef"
        }
  recorded_at: Sun, 01 Jun 2025 17:26:35 GMT
recorded_with: VCR 6.3.1
